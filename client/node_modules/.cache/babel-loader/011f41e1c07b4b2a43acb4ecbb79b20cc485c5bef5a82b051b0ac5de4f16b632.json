{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danas\\\\Desktop\\\\Profile\\\\attendence-app-backup\\\\client\\\\src\\\\pages\\\\auth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom'; //for redirection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Auth;\nconst Login = () => {\n  _s();\n  const [_, setCookies] = useCookies([\"access_token\"]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      //respnse will receive everyting sent back from API\n      const response = await axios.post(\"http://localhost:3001/auth/login\", {\n        username,\n        password\n      });\n      setCookies(\"access_token\", response.data.token);\n      window.localStorage.setItem(\"userID\", response.data.userID); //sets user ID to local storage -- easier access\n      navigate(\"/portal\"); // calling useNavigate hook here for direction to Homepage\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //props for form\n    _jsxDEV(Form, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      label: \"Login\",\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Login, \"auTIHLwSTL6tNqjrxpOpK3FCJ2I=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c2 = Login;\nconst Register = () => {\n  _s2();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const onSubmit = async event => {\n    //prevents form from refreshing page on submit\n    event.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/auth/register\", {\n        username,\n        password\n      });\n      alert(\"Registration Complete! Please go back and login.\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    label: \"Register\",\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s2(Register, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c3 = Register;\nconst Form = _ref => {\n  let {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    label,\n    onSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \" Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \" Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"register-buttons\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Form;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"Login\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"names":["useState","axios","useCookies","useNavigate","jsxDEV","_jsxDEV","Auth","className","children","Login","fileName","_jsxFileName","lineNumber","columnNumber","Register","_c","_s","_","setCookies","username","setUsername","password","setPassword","navigate","onSubmit","event","preventDefault","response","post","data","token","window","localStorage","setItem","userID","err","console","error","Form","label","_c2","_s2","alert","_c3","_ref","htmlFor","type","id","value","onChange","target","class","_c4","$RefreshReg$"],"sources":["C:/Users/danas/Desktop/Profile/attendence-app-backup/client/src/pages/auth.jsx"],"sourcesContent":["import {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useCookies} from 'react-cookie';\r\nimport {useNavigate} from 'react-router-dom'; //for redirection\r\n\r\nexport const Auth = () => {\r\n    return (\r\n        <div className=\"auth\">\r\n            <Login/>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Login = () =>{\r\n    const [_, setCookies] = useCookies ([\"access_token\"]);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const navigate = useNavigate(); \r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            //respnse will receive everyting sent back from API\r\n         const response = await axios.post(\"http://localhost:3001/auth/login\", {\r\n            username, \r\n            password,});\r\n\r\n            setCookies(\"access_token\", response.data.token)\r\n            window.localStorage.setItem(\"userID\", response.data.userID); //sets user ID to local storage -- easier access\r\n            navigate(\"/portal\")    // calling useNavigate hook here for direction to Homepage\r\n        }catch (err){\r\n            console.error(err)\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return(\r\n        //props for form\r\n        <Form\r\n            username={username}\r\n            setUsername={setUsername}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            label=\"Login\"\r\n            onSubmit={onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        //prevents form from refreshing page on submit\r\n        event.preventDefault();\r\n        try {\r\n         await axios.post(\"http://localhost:3001/auth/register\", {\r\n            username, \r\n            password,});\r\n         alert(\"Registration Complete! Please go back and login.\");\r\n        } catch(err){\r\n         console.error(err);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            username={username}\r\n            setUsername={setUsername}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            label=\"Register\"\r\n            onSubmit={onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\n    \r\nconst Form = ({username, \r\n               setUsername, \r\n               password,\r\n               setPassword, \r\n               label, \r\n               onSubmit,\r\n            }) =>{\r\n                return(\r\n\r\n        <div className=\"auth-container\">\r\n         <form onSubmit = {onSubmit}>\r\n            <h2> {label} </h2>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\"> Username: </label>\r\n                     <input \r\n                    type=\"text\" \r\n                    id=\"username\" \r\n                    value={username}\r\n                    onChange={(event) => setUsername(event.target.value)}/>\r\n        </div>\r\n        \r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\"> Password: </label>\r\n                <input \r\n                type=\"password\" \r\n                id=\"password\" \r\n                value={password}\r\n                onChange={(event) =>setPassword(event.target.value)}/>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"register-buttons\">{label}</button>\r\n        </form>\r\n    </div>\r\n\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}