{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danas\\\\Desktop\\\\Profile\\\\attendence-app-backup\\\\client\\\\src\\\\pages\\\\create-class.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserId\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateClass = () => {\n  _s();\n  const userID = useGetUserID(); //using hook\n\n  const [roster, setRoster] = useState({\n    studentName: \"\",\n    courses: [],\n    notesOnStudent: \"\",\n    studentPhoto: \"\",\n    absences: 0,\n    userOwner: userID\n  }); //state that keeps track of roster we are creating\n  //put on inituial structure of how object will look\n\n  const navigate = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target; //name = name property of each input for the forms\n    setRoster({\n      ...roster,\n      [name]: value\n    });\n  };\n  const handleCourseChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const courses = roster.courses;\n    courses[idx] = value;\n    setRoster({\n      ...roster,\n      courses\n    });\n  };\n  const addCourse = () => {\n    setRoster({\n      ...roster,\n      courses: [...roster.courses, \"\"]\n    }); //setting courses object to be the same as it was before but whatever is after the comma is what id going to change in the object\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log(roster);\n      await axios.post(\"http://localhost:3001/roster\", roster);\n      alert(\"Student Profile Created!\");\n      navigate(\"/student-profiles\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-class\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Class Roster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentName\",\n        children: \"Student Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"studentName\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"enrolledSubjects\",\n        children: \"Enrolled Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), roster.courses.map((course, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"courses\",\n        value: course,\n        onChange: event => handleCourseChange(event, idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCourse,\n        type: \"button\",\n        children: \"Add Subject \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notesOnStudent\",\n        children: \"Notes on Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"notesOnStudent\",\n        name: \"notesOnStudent\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentPhoto\",\n        children: \"Student Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"studentPhoto\",\n        name: \"studentPhoto\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"absences\",\n        children: \"Total Absences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"absences\",\n        name: \"absences\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Student Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n_s(CreateClass, \"rf7fGJordAkxzovotNm/qeswnuQ=\", false, function () {\n  return [useGetUserID, useNavigate];\n});\n_c = CreateClass;\nvar _c;\n$RefreshReg$(_c, \"CreateClass\");","map":{"version":3,"names":["useState","axios","useGetUserID","useNavigate","jsxDEV","_jsxDEV","CreateClass","_s","userID","roster","setRoster","studentName","courses","notesOnStudent","studentPhoto","absences","userOwner","navigate","handleChange","event","name","value","target","handleCourseChange","idx","addCourse","onSubmit","preventDefault","console","log","post","alert","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","course","onClick","_c","$RefreshReg$"],"sources":["C:/Users/danas/Desktop/Profile/attendence-app-backup/client/src/pages/create-class.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserId\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const CreateClass =() =>{\r\n    const userID = useGetUserID(); //using hook\r\n\r\n    const [roster, setRoster] = useState({\r\n        studentName: \"\",\r\n        courses: [],\r\n        notesOnStudent:\"\",\r\n        studentPhoto: \"\",\r\n        absences: 0,\r\n        userOwner: userID,\r\n    }); //state that keeps track of roster we are creating\r\n        //put on inituial structure of how object will look\r\n\r\n        const navigate = useNavigate();\r\n\r\n        const handleChange = (event)=>{\r\n            const {name, value} = event.target; //name = name property of each input for the forms\r\n            setRoster({...roster,[name]: value});\r\n        };\r\n\r\n        const handleCourseChange = (event, idx)=>{\r\n            const {value} = event.target;\r\n            const courses = roster.courses;\r\n            courses[idx] = value;\r\n            setRoster({...roster,courses});\r\n        };\r\n\r\n        const addCourse = () => {\r\n            setRoster({...roster, courses: [...roster.courses, \"\"] }) //setting courses object to be the same as it was before but whatever is after the comma is what id going to change in the object\r\n        };\r\n\r\n        const onSubmit= async (event) => {\r\n            event.preventDefault();\r\n            try{\r\n                console.log(roster)\r\n             await axios.post(\"http://localhost:3001/roster\",roster);\r\n             alert(\"Student Profile Created!\")\r\n             navigate(\"/student-profiles\");\r\n            }catch(err) {\r\n             console.error(err);\r\n\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"create-class\">\r\n                <h2>Create Class Roster</h2> \r\n                <form onSubmit={onSubmit}>\r\n                    <label htmlFor=\"studentName\">Student Name</label>\r\n                    <input type=\"text\" id=\"name\" name = \"studentName\" onChange={handleChange} />\r\n        \r\n                   \r\n                    <label htmlFor=\"enrolledSubjects\">Enrolled Courses</label>\r\n                      \r\n                      {/* //adding course and index of that course */}\r\n                    {roster.courses.map((course, idx) => (\r\n                        <input key={idx} type=\"text\" \r\n                        name=\"courses\" value={course}\r\n                        onChange={(event) => handleCourseChange(event, idx)}/>\r\n                    ))}\r\n                    <button onClick={addCourse}type=\"button\">\r\n                        Add Subject </button>\r\n        \r\n                    <label htmlFor=\"notesOnStudent\">Notes on Student</label>\r\n                    <textarea id=\"notesOnStudent\" name=\"notesOnStudent\" onChange={handleChange}></textarea>\r\n                    <label htmlFor=\"studentPhoto\">Student Profile Picture</label>\r\n                    <input type=\"text\" id=\"studentPhoto\" name=\"studentPhoto\" onChange={handleChange}/>\r\n                    <label htmlFor=\"absences\">Total Absences</label>\r\n                    <input type=\"number\" id=\"absences\" name=\"absences\" onChange={handleChange}/>\r\n                    \r\n                    <button type=\"submit\">\r\n                        Create Student Profile</button>\r\n                </form>\r\n                </div>\r\n            );\r\n        };"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAC3B,MAAMC,MAAM,GAAGN,YAAY,EAAE,CAAC,CAAC;;EAE/B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACjCW,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAC,EAAE;IACjBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAER;EACf,CAAC,CAAC,CAAC,CAAC;EACA;;EAEA,MAAMS,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,YAAY,GAAIC,KAAK,IAAG;IAC1B,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;IACpCZ,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAC,CAACW,IAAI,GAAGC;IAAK,CAAC,CAAC;EACxC,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAACJ,KAAK,EAAEK,GAAG,KAAG;IACrC,MAAM;MAACH;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAC5B,MAAMV,OAAO,GAAGH,MAAM,CAACG,OAAO;IAC9BA,OAAO,CAACY,GAAG,CAAC,GAAGH,KAAK;IACpBX,SAAS,CAAC;MAAC,GAAGD,MAAM;MAACG;IAAO,CAAC,CAAC;EAClC,CAAC;EAED,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACpBf,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEG,OAAO,EAAE,CAAC,GAAGH,MAAM,CAACG,OAAO,EAAE,EAAE;IAAE,CAAC,CAAC,EAAC;EAC9D,CAAC;;EAED,MAAMc,QAAQ,GAAE,MAAOP,KAAK,IAAK;IAC7BA,KAAK,CAACQ,cAAc,EAAE;IACtB,IAAG;MACCC,OAAO,CAACC,GAAG,CAACpB,MAAM,CAAC;MACtB,MAAMR,KAAK,CAAC6B,IAAI,CAAC,8BAA8B,EAACrB,MAAM,CAAC;MACvDsB,KAAK,CAAC,0BAA0B,CAAC;MACjCd,QAAQ,CAAC,mBAAmB,CAAC;IAC9B,CAAC,QAAMe,GAAG,EAAE;MACXJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;IAEnB;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAK6B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzB9B,OAAA;MAAA8B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5BlC,OAAA;MAAMqB,QAAQ,EAAEA,QAAS;MAAAS,QAAA,gBACrB9B,OAAA;QAAOmC,OAAO,EAAC,aAAa;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACjDlC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACtB,IAAI,EAAG,aAAa;QAACuB,QAAQ,EAAEzB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAG5ElC,OAAA;QAAOmC,OAAO,EAAC,kBAAkB;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,EAGzD9B,MAAM,CAACG,OAAO,CAACgC,GAAG,CAAC,CAACC,MAAM,EAAErB,GAAG,kBAC5BnB,OAAA;QAAiBoC,IAAI,EAAC,MAAM;QAC5BrB,IAAI,EAAC,SAAS;QAACC,KAAK,EAAEwB,MAAO;QAC7BF,QAAQ,EAAGxB,KAAK,IAAKI,kBAAkB,CAACJ,KAAK,EAAEK,GAAG;MAAE,GAFxCA,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGlB,CAAC,eACFlC,OAAA;QAAQyC,OAAO,EAAErB,SAAU;QAAAgB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MACzB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAEzBlC,OAAA;QAAOmC,OAAO,EAAC,gBAAgB;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxDlC,OAAA;QAAUqC,EAAE,EAAC,gBAAgB;QAACtB,IAAI,EAAC,gBAAgB;QAACuB,QAAQ,EAAEzB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY,eACvFlC,OAAA;QAAOmC,OAAO,EAAC,cAAc;QAAAL,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC7DlC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,cAAc;QAACtB,IAAI,EAAC,cAAc;QAACuB,QAAQ,EAAEzB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClFlC,OAAA;QAAOmC,OAAO,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChDlC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,UAAU;QAACtB,IAAI,EAAC,UAAU;QAACuB,QAAQ,EAAEzB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAE5ElC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MACI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEd,CAAC;AAAChC,EAAA,CA3EGD,WAAW;EAAA,QACLJ,YAAY,EAYNC,WAAW;AAAA;AAAA4C,EAAA,GAbvBzC,WAAW;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}