{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGetUserID } from \"../hooks/useGetUserId\";\nimport axios from \"axios\";\nimport { useCookies } from 'react-cookie';\nexport const Home = () => {\n  _s();\n  const [rosters, setRosters] = useState([]);\n  const [savedRosters, setSavedRosters] = useState([]);\n  const [cookies, _] = useCookies([\"access_token\"]);\n  const userID = useGetUserID();\n  useEffect(() => {\n    const fetchRoster = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/roster\");\n        setRosters(response.data); //return the list of rosters\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    // const fetchSavedRoster = async () => {\n    //   try {\n    //     const response = await axios.get(\n    //       `http://localhost:3001/recipes/savedRosters/ids/${userID}`\n    //     );\n    //     setSavedRosters(response.data.savedRosters);\n    //   } catch (err) {\n    //     console.log(err);\n    //   }\n    // };\n\n    fetchRoster();\n\n    // if(cookies.access_token)\n    // fetchSavedRoster();\n  }, []);\n\n  // const saveRoster = async (rosterID) => {\n  //   try {\n  //     const response = await axios.put(\"http://localhost:3001/roster\", {\n  //       rosterID,\n  //       userID,\n  //     },{headers:{authorization: cookies.access_token}}); //front end authorization for having unverified token\n  //     setSavedRosters(response.data.savedRosters);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  // const isRosterSaved = (id) => savedRosters.includes(id);\n\n  // return (\n  //   <div>\n  //     <h1>Student Profiles</h1>\n  //     <ul>\n  //       {rosters.map((roster) => (\n  //         <li key={roster._id}>\n  //           <div>\n  //             <h2>{rosters.studentName}</h2>\n  //             <button\n  //               onClick={() => saveRoster(roster._id)}\n  //               disabled={isRosterSaved(roster._id)}\n  //             >\n  //               {isRosterSaved(roster._id) ? \"Saved\" : \"Save\"}\n  //             </button>\n  //           </div>\n  //           <div className=\"notesOnStudent\">\n  //             <p>{roster.notesOnStudent}</p>\n  //           </div>\n  //           <img src={roster.studentPhoto} alt={rosters.studentName} />\n  //           <p>Absences: {roster.absences} days</p>\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   </div>\n  // );\n};\n_s(Home, \"r7Sim3Yr1jKsDg145hOXrYRTKuI=\", false, function () {\n  return [useCookies, useGetUserID];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useGetUserID","axios","useCookies","Home","_s","rosters","setRosters","savedRosters","setSavedRosters","cookies","_","userID","fetchRoster","response","get","data","err","console","log","_c","$RefreshReg$"],"sources":["C:/Users/danas/Desktop/Profile/attendence-app-backup/client/src/pages/home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetUserID } from \"../hooks/useGetUserId\"\r\nimport axios from \"axios\";\r\nimport {useCookies} from 'react-cookie';\r\n\r\nexport const Home = () => {\r\n  const [rosters, setRosters] = useState([]);\r\n  const [savedRosters, setSavedRosters] = useState([]);\r\n  const [cookies,_] = useCookies([\"access_token\"]);\r\n\r\n  const userID = useGetUserID();\r\n\r\n  useEffect(() => {\r\n    const fetchRoster = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3001/roster\");\r\n        setRosters(response.data);//return the list of rosters\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    // const fetchSavedRoster = async () => {\r\n    //   try {\r\n    //     const response = await axios.get(\r\n    //       `http://localhost:3001/recipes/savedRosters/ids/${userID}`\r\n    //     );\r\n    //     setSavedRosters(response.data.savedRosters);\r\n    //   } catch (err) {\r\n    //     console.log(err);\r\n    //   }\r\n    // };\r\n\r\n    fetchRoster();\r\n\r\n    // if(cookies.access_token)\r\n    // fetchSavedRoster();\r\n  }, []);\r\n\r\n  // const saveRoster = async (rosterID) => {\r\n  //   try {\r\n  //     const response = await axios.put(\"http://localhost:3001/roster\", {\r\n  //       rosterID,\r\n  //       userID,\r\n  //     },{headers:{authorization: cookies.access_token}}); //front end authorization for having unverified token\r\n  //     setSavedRosters(response.data.savedRosters);\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // };\r\n\r\n  // const isRosterSaved = (id) => savedRosters.includes(id);\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <h1>Student Profiles</h1>\r\n  //     <ul>\r\n  //       {rosters.map((roster) => (\r\n  //         <li key={roster._id}>\r\n  //           <div>\r\n  //             <h2>{rosters.studentName}</h2>\r\n  //             <button\r\n  //               onClick={() => saveRoster(roster._id)}\r\n  //               disabled={isRosterSaved(roster._id)}\r\n  //             >\r\n  //               {isRosterSaved(roster._id) ? \"Saved\" : \"Save\"}\r\n  //             </button>\r\n  //           </div>\r\n  //           <div className=\"notesOnStudent\">\r\n  //             <p>{roster.notesOnStudent}</p>\r\n  //           </div>\r\n  //           <img src={roster.studentPhoto} alt={rosters.studentName} />\r\n  //           <p>Absences: {roster.absences} days</p>\r\n  //         </li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   </div>\r\n  // );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,cAAc;AAEvC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAACC,CAAC,CAAC,GAAGR,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;EAEhD,MAAMS,MAAM,GAAGX,YAAY,EAAE;EAE7BF,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8BAA8B,CAAC;QAChER,UAAU,CAACO,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAJ,WAAW,EAAE;;IAEb;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACR,EAAA,CAzEWD,IAAI;EAAA,QAGKD,UAAU,EAEfF,YAAY;AAAA;AAAAmB,EAAA,GALhBhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}