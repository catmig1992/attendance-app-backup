{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danas\\\\Desktop\\\\Profile\\\\attendence-app-backup\\\\client\\\\src\\\\pages\\\\create-class.jsx\",\n  _s = $RefreshSig$();\n// export const CreateClass =() =>{\n//     return <div>Create Class Roster</div>;\n// };\n\nimport React, { useEffect, useState } from \"react\";\n//import { useGetUserID } from \"../hooks/useGetUserId.js\"\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateClass = () => {\n  _s();\n  const [roster, setRoster] = useState([]);\n  const [savedRoster, setSavedRoster] = useState([]);\n  const userID = useGetUserID();\n  useEffect(() => {\n    const fetchRoster = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/create-class\");\n        setRoster(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchSavedRoster = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/create-class/savedCreateClass/ids/${userID}`);\n        setSavedRoster(response.data.savedRoster);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchRoster();\n    fetchSavedRoster();\n  }, []);\n  const saveRoster = async rosterID => {\n    try {\n      const response = await axios.put(\"http://localhost:3001/create-class\", {\n        rosterID,\n        userID\n      });\n      setSavedRoster(response.data.savedRoster);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const isRosterSaved = id => savedRoster.includes(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Class Roster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: roster.map(roster => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: roster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveRoster(roster._id),\n            disabled: isRosterSaved(roster._id),\n            children: isRosterSaved(roster._id) ? \"Saved\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, roster._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateClass, \"FNq/VPrLHN4LePmr6snqqhn/5NI=\", true);\n_c = CreateClass;\nvar _c;\n$RefreshReg$(_c, \"CreateClass\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CreateClass","_s","roster","setRoster","savedRoster","setSavedRoster","userID","useGetUserID","fetchRoster","response","get","data","err","console","log","fetchSavedRoster","saveRoster","rosterID","put","isRosterSaved","id","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/danas/Desktop/Profile/attendence-app-backup/client/src/pages/create-class.jsx"],"sourcesContent":["// export const CreateClass =() =>{\r\n//     return <div>Create Class Roster</div>;\r\n// };\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n//import { useGetUserID } from \"../hooks/useGetUserId.js\"\r\nimport axios from \"axios\";\r\n\r\nexport const CreateClass = () => {\r\n  const [roster, setRoster] = useState([]);\r\n  const [savedRoster, setSavedRoster] = useState([]);\r\n\r\n  const userID = useGetUserID();\r\n\r\n  useEffect(() => {\r\n    const fetchRoster = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3001/create-class\");\r\n        setRoster(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    const fetchSavedRoster = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/create-class/savedCreateClass/ids/${userID}`\r\n        );\r\n        setSavedRoster(response.data.savedRoster);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchRoster();\r\n    fetchSavedRoster();\r\n  }, []);\r\n\r\n  const saveRoster = async (rosterID) => {\r\n    try {\r\n      const response = await axios.put(\"http://localhost:3001/create-class\", {\r\n        rosterID,\r\n        userID,\r\n      });\r\n      setSavedRoster(response.data.savedRoster);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const isRosterSaved = (id) => savedRoster.includes(id);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Class Roster</h1>\r\n      <ul>\r\n        {roster.map((roster) => (\r\n          <li key={roster._id}>\r\n            <div>\r\n              <h2>{roster.name}</h2>\r\n              <button\r\n                onClick={() => saveRoster(roster._id)}\r\n                disabled={isRosterSaved(roster._id)}\r\n              >\r\n                {isRosterSaved(roster._id) ? \"Saved\" : \"Save\"}\r\n              </button>\r\n            </div>\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}