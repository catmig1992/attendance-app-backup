{"ast":null,"code":"// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGetUserID } from \"../hooks/useGetUserId\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export const CreateRoster =() =>{\n//     const userID = useGetUserID();\n\n//     const [roster, setRoster] = useState({\n//         FirstName: \"\",\n//         LastName: \"\",\n//         //userOwner: userID ,\n//     }); //state that keeps track of roster we are creating\n\n//         const navigate = useNavigate();\n\n//         const handleChange = (event)=>{\n//             const {FirstName, value} = event.target;\n//             setRoster({...roster,FirstName: value});\n//         };\n\n//         const handlefirstnameChange = (event, idx)=>{\n//             const {value} = event.target;\n//             const firstname = roster.firstname;\n//             firstname[idx] = value;\n//             setRecipe({...roster,firstname});\n//         };\n\n//         const addIngredient = () => {\n//             setRecipe({...recipe, ingredients: [...recipe.ingredients, \"\"] }) //setting recipe object to be the same as it was before but whatever is after the comma is what id going to change in the object\n//         };\n\n//         const onSubmit= async (event) => {\n//             event.preventDefault();\n//             try{\n//              await axios.post(\"http://localhost:3001/create-class\", recipe);\n//              alert(\"Roster created!\")\n//              navigate(\"/create-class\");\n//             }catch(err) {\n//              console.error(err);\n\n//             }\n//         };\n\n//     return (\n//     <div className=\"create-recipe\">\n//         <h2>Create Recipe</h2> \n//         <form onSubmit={onSubmit}>\n//             <label htmlFor=\"name\">Name</label>\n//             <input type=\"text\" id=\"name\" name = \"name\" onChange={handleChange} />\n\n//             <label htmlFor=\"ingredients\">Ingredients</label>\n\n//             {recipe.ingredients.map((ingredient, idx) => (\n//                 <input key={idx} type=\"text\" \n//                 name=\"ingredients\" value={ingredient}\n//                 onChange={(event) => handleIngredientChange(event, idx)}/>\n//             ))}\n//             <button onClick={addIngredient}type=\"button\">\n//                 Add Ingredient</button>\n\n//             <label htmlFor=\"instructions\">Instructions</label>\n//             <textarea id=\"instructions\" name=\"instructions\" onChange={handleChange}></textarea>\n//             <label htmlFor=\"imageUrl\">Image URL</label>\n//             <input type=\"text\" id=\"imageUrl\" name=\"imageUrl\" onChange={handleChange}/>\n//             <label htmlFor=\"cookingTime\">Cooking Time(minutes)</label>\n//             <input type=\"number\" id=\"cookingTime\" name=\"cookingTime\" onChange={handleChange}/>\n\n//             <button type=\"submit\">\n//                 Add Student</button>\n//         </form>\n//         </div>\n//     );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/danas/Desktop/Profile/attendence-app-backup/client/src/pages/create-class.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGetUserID } from \"../hooks/useGetUserId\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export const CreateRoster =() =>{\r\n//     const userID = useGetUserID();\r\n\r\n//     const [roster, setRoster] = useState({\r\n//         FirstName: \"\",\r\n//         LastName: \"\",\r\n//         //userOwner: userID ,\r\n//     }); //state that keeps track of roster we are creating\r\n       \r\n\r\n//         const navigate = useNavigate();\r\n\r\n//         const handleChange = (event)=>{\r\n//             const {FirstName, value} = event.target;\r\n//             setRoster({...roster,FirstName: value});\r\n//         };\r\n\r\n//         const handlefirstnameChange = (event, idx)=>{\r\n//             const {value} = event.target;\r\n//             const firstname = roster.firstname;\r\n//             firstname[idx] = value;\r\n//             setRecipe({...roster,firstname});\r\n//         };\r\n\r\n//         const addIngredient = () => {\r\n//             setRecipe({...recipe, ingredients: [...recipe.ingredients, \"\"] }) //setting recipe object to be the same as it was before but whatever is after the comma is what id going to change in the object\r\n//         };\r\n\r\n//         const onSubmit= async (event) => {\r\n//             event.preventDefault();\r\n//             try{\r\n//              await axios.post(\"http://localhost:3001/create-class\", recipe);\r\n//              alert(\"Roster created!\")\r\n//              navigate(\"/create-class\");\r\n//             }catch(err) {\r\n//              console.error(err);\r\n\r\n//             }\r\n//         };\r\n\r\n//     return (\r\n//     <div className=\"create-recipe\">\r\n//         <h2>Create Recipe</h2> \r\n//         <form onSubmit={onSubmit}>\r\n//             <label htmlFor=\"name\">Name</label>\r\n//             <input type=\"text\" id=\"name\" name = \"name\" onChange={handleChange} />\r\n\r\n           \r\n//             <label htmlFor=\"ingredients\">Ingredients</label>\r\n\r\n//             {recipe.ingredients.map((ingredient, idx) => (\r\n//                 <input key={idx} type=\"text\" \r\n//                 name=\"ingredients\" value={ingredient}\r\n//                 onChange={(event) => handleIngredientChange(event, idx)}/>\r\n//             ))}\r\n//             <button onClick={addIngredient}type=\"button\">\r\n//                 Add Ingredient</button>\r\n\r\n//             <label htmlFor=\"instructions\">Instructions</label>\r\n//             <textarea id=\"instructions\" name=\"instructions\" onChange={handleChange}></textarea>\r\n//             <label htmlFor=\"imageUrl\">Image URL</label>\r\n//             <input type=\"text\" id=\"imageUrl\" name=\"imageUrl\" onChange={handleChange}/>\r\n//             <label htmlFor=\"cookingTime\">Cooking Time(minutes)</label>\r\n//             <input type=\"number\" id=\"cookingTime\" name=\"cookingTime\" onChange={handleChange}/>\r\n            \r\n//             <button type=\"submit\">\r\n//                 Add Student</button>\r\n//         </form>\r\n//         </div>\r\n//     );\r\n// };"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}